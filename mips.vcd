$date
	Sun Jul 28 16:05:27 2019
$end
$version
	ModelSim Version 10.4a
$end
$timescale
	1ns
$end

$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 32 # pc40In [31:0] $end
$var reg 32 $ inst0In [31:0] $end
$var wire 1 % clk_extends $end
$var wire 1 & pc40Out [31] $end
$var wire 1 ' pc40Out [30] $end
$var wire 1 ( pc40Out [29] $end
$var wire 1 ) pc40Out [28] $end
$var wire 1 * pc40Out [27] $end
$var wire 1 + pc40Out [26] $end
$var wire 1 , pc40Out [25] $end
$var wire 1 - pc40Out [24] $end
$var wire 1 . pc40Out [23] $end
$var wire 1 / pc40Out [22] $end
$var wire 1 0 pc40Out [21] $end
$var wire 1 1 pc40Out [20] $end
$var wire 1 2 pc40Out [19] $end
$var wire 1 3 pc40Out [18] $end
$var wire 1 4 pc40Out [17] $end
$var wire 1 5 pc40Out [16] $end
$var wire 1 6 pc40Out [15] $end
$var wire 1 7 pc40Out [14] $end
$var wire 1 8 pc40Out [13] $end
$var wire 1 9 pc40Out [12] $end
$var wire 1 : pc40Out [11] $end
$var wire 1 ; pc40Out [10] $end
$var wire 1 < pc40Out [9] $end
$var wire 1 = pc40Out [8] $end
$var wire 1 > pc40Out [7] $end
$var wire 1 ? pc40Out [6] $end
$var wire 1 @ pc40Out [5] $end
$var wire 1 A pc40Out [4] $end
$var wire 1 B pc40Out [3] $end
$var wire 1 C pc40Out [2] $end
$var wire 1 D pc40Out [1] $end
$var wire 1 E pc40Out [0] $end
$var wire 1 F inst0out [31] $end
$var wire 1 G inst0out [30] $end
$var wire 1 H inst0out [29] $end
$var wire 1 I inst0out [28] $end
$var wire 1 J inst0out [27] $end
$var wire 1 K inst0out [26] $end
$var wire 1 L inst0out [25] $end
$var wire 1 M inst0out [24] $end
$var wire 1 N inst0out [23] $end
$var wire 1 O inst0out [22] $end
$var wire 1 P inst0out [21] $end
$var wire 1 Q inst0out [20] $end
$var wire 1 R inst0out [19] $end
$var wire 1 S inst0out [18] $end
$var wire 1 T inst0out [17] $end
$var wire 1 U inst0out [16] $end
$var wire 1 V inst0out [15] $end
$var wire 1 W inst0out [14] $end
$var wire 1 X inst0out [13] $end
$var wire 1 Y inst0out [12] $end
$var wire 1 Z inst0out [11] $end
$var wire 1 [ inst0out [10] $end
$var wire 1 \ inst0out [9] $end
$var wire 1 ] inst0out [8] $end
$var wire 1 ^ inst0out [7] $end
$var wire 1 _ inst0out [6] $end
$var wire 1 ` inst0out [5] $end
$var wire 1 a inst0out [4] $end
$var wire 1 b inst0out [3] $end
$var wire 1 c inst0out [2] $end
$var wire 1 d inst0out [1] $end
$var wire 1 e inst0out [0] $end
$var wire 1 f pc41Out [31] $end
$var wire 1 g pc41Out [30] $end
$var wire 1 h pc41Out [29] $end
$var wire 1 i pc41Out [28] $end
$var wire 1 j pc41Out [27] $end
$var wire 1 k pc41Out [26] $end
$var wire 1 l pc41Out [25] $end
$var wire 1 m pc41Out [24] $end
$var wire 1 n pc41Out [23] $end
$var wire 1 o pc41Out [22] $end
$var wire 1 p pc41Out [21] $end
$var wire 1 q pc41Out [20] $end
$var wire 1 r pc41Out [19] $end
$var wire 1 s pc41Out [18] $end
$var wire 1 t pc41Out [17] $end
$var wire 1 u pc41Out [16] $end
$var wire 1 v pc41Out [15] $end
$var wire 1 w pc41Out [14] $end
$var wire 1 x pc41Out [13] $end
$var wire 1 y pc41Out [12] $end
$var wire 1 z pc41Out [11] $end
$var wire 1 { pc41Out [10] $end
$var wire 1 | pc41Out [9] $end
$var wire 1 } pc41Out [8] $end
$var wire 1 ~ pc41Out [7] $end
$var wire 1 !! pc41Out [6] $end
$var wire 1 "! pc41Out [5] $end
$var wire 1 #! pc41Out [4] $end
$var wire 1 $! pc41Out [3] $end
$var wire 1 %! pc41Out [2] $end
$var wire 1 &! pc41Out [1] $end
$var wire 1 '! pc41Out [0] $end
$var wire 1 (! inst1out [31] $end
$var wire 1 )! inst1out [30] $end
$var wire 1 *! inst1out [29] $end
$var wire 1 +! inst1out [28] $end
$var wire 1 ,! inst1out [27] $end
$var wire 1 -! inst1out [26] $end
$var wire 1 .! inst1out [25] $end
$var wire 1 /! inst1out [24] $end
$var wire 1 0! inst1out [23] $end
$var wire 1 1! inst1out [22] $end
$var wire 1 2! inst1out [21] $end
$var wire 1 3! inst1out [20] $end
$var wire 1 4! inst1out [19] $end
$var wire 1 5! inst1out [18] $end
$var wire 1 6! inst1out [17] $end
$var wire 1 7! inst1out [16] $end
$var wire 1 8! inst1out [15] $end
$var wire 1 9! inst1out [14] $end
$var wire 1 :! inst1out [13] $end
$var wire 1 ;! inst1out [12] $end
$var wire 1 <! inst1out [11] $end
$var wire 1 =! inst1out [10] $end
$var wire 1 >! inst1out [9] $end
$var wire 1 ?! inst1out [8] $end
$var wire 1 @! inst1out [7] $end
$var wire 1 A! inst1out [6] $end
$var wire 1 B! inst1out [5] $end
$var wire 1 C! inst1out [4] $end
$var wire 1 D! inst1out [3] $end
$var wire 1 E! inst1out [2] $end
$var wire 1 F! inst1out [1] $end
$var wire 1 G! inst1out [0] $end

$scope module if_id0 $end
$var wire 1 H! clk $end
$var wire 1 I! reset $end
$var wire 1 J! pcMore4Input [31] $end
$var wire 1 K! pcMore4Input [30] $end
$var wire 1 L! pcMore4Input [29] $end
$var wire 1 M! pcMore4Input [28] $end
$var wire 1 N! pcMore4Input [27] $end
$var wire 1 O! pcMore4Input [26] $end
$var wire 1 P! pcMore4Input [25] $end
$var wire 1 Q! pcMore4Input [24] $end
$var wire 1 R! pcMore4Input [23] $end
$var wire 1 S! pcMore4Input [22] $end
$var wire 1 T! pcMore4Input [21] $end
$var wire 1 U! pcMore4Input [20] $end
$var wire 1 V! pcMore4Input [19] $end
$var wire 1 W! pcMore4Input [18] $end
$var wire 1 X! pcMore4Input [17] $end
$var wire 1 Y! pcMore4Input [16] $end
$var wire 1 Z! pcMore4Input [15] $end
$var wire 1 [! pcMore4Input [14] $end
$var wire 1 \! pcMore4Input [13] $end
$var wire 1 ]! pcMore4Input [12] $end
$var wire 1 ^! pcMore4Input [11] $end
$var wire 1 _! pcMore4Input [10] $end
$var wire 1 `! pcMore4Input [9] $end
$var wire 1 a! pcMore4Input [8] $end
$var wire 1 b! pcMore4Input [7] $end
$var wire 1 c! pcMore4Input [6] $end
$var wire 1 d! pcMore4Input [5] $end
$var wire 1 e! pcMore4Input [4] $end
$var wire 1 f! pcMore4Input [3] $end
$var wire 1 g! pcMore4Input [2] $end
$var wire 1 h! pcMore4Input [1] $end
$var wire 1 i! pcMore4Input [0] $end
$var wire 1 j! instructionInput [31] $end
$var wire 1 k! instructionInput [30] $end
$var wire 1 l! instructionInput [29] $end
$var wire 1 m! instructionInput [28] $end
$var wire 1 n! instructionInput [27] $end
$var wire 1 o! instructionInput [26] $end
$var wire 1 p! instructionInput [25] $end
$var wire 1 q! instructionInput [24] $end
$var wire 1 r! instructionInput [23] $end
$var wire 1 s! instructionInput [22] $end
$var wire 1 t! instructionInput [21] $end
$var wire 1 u! instructionInput [20] $end
$var wire 1 v! instructionInput [19] $end
$var wire 1 w! instructionInput [18] $end
$var wire 1 x! instructionInput [17] $end
$var wire 1 y! instructionInput [16] $end
$var wire 1 z! instructionInput [15] $end
$var wire 1 {! instructionInput [14] $end
$var wire 1 |! instructionInput [13] $end
$var wire 1 }! instructionInput [12] $end
$var wire 1 ~! instructionInput [11] $end
$var wire 1 !" instructionInput [10] $end
$var wire 1 "" instructionInput [9] $end
$var wire 1 #" instructionInput [8] $end
$var wire 1 $" instructionInput [7] $end
$var wire 1 %" instructionInput [6] $end
$var wire 1 &" instructionInput [5] $end
$var wire 1 '" instructionInput [4] $end
$var wire 1 (" instructionInput [3] $end
$var wire 1 )" instructionInput [2] $end
$var wire 1 *" instructionInput [1] $end
$var wire 1 +" instructionInput [0] $end
$var reg 32 ," pcMore4Output [31:0] $end
$var reg 32 -" instructionOutput [31:0] $end
$upscope $end

$scope module id_ex0 $end
$var wire 1 ." clk $end
$var wire 1 /" reset $end
$var wire 1 & readRegister0In [31] $end
$var wire 1 ' readRegister0In [30] $end
$var wire 1 ( readRegister0In [29] $end
$var wire 1 ) readRegister0In [28] $end
$var wire 1 * readRegister0In [27] $end
$var wire 1 + readRegister0In [26] $end
$var wire 1 , readRegister0In [25] $end
$var wire 1 - readRegister0In [24] $end
$var wire 1 . readRegister0In [23] $end
$var wire 1 / readRegister0In [22] $end
$var wire 1 0 readRegister0In [21] $end
$var wire 1 1 readRegister0In [20] $end
$var wire 1 2 readRegister0In [19] $end
$var wire 1 3 readRegister0In [18] $end
$var wire 1 4 readRegister0In [17] $end
$var wire 1 5 readRegister0In [16] $end
$var wire 1 6 readRegister0In [15] $end
$var wire 1 7 readRegister0In [14] $end
$var wire 1 8 readRegister0In [13] $end
$var wire 1 9 readRegister0In [12] $end
$var wire 1 : readRegister0In [11] $end
$var wire 1 ; readRegister0In [10] $end
$var wire 1 < readRegister0In [9] $end
$var wire 1 = readRegister0In [8] $end
$var wire 1 > readRegister0In [7] $end
$var wire 1 ? readRegister0In [6] $end
$var wire 1 @ readRegister0In [5] $end
$var wire 1 A readRegister0In [4] $end
$var wire 1 B readRegister0In [3] $end
$var wire 1 C readRegister0In [2] $end
$var wire 1 D readRegister0In [1] $end
$var wire 1 E readRegister0In [0] $end
$var wire 1 F readRegister1In [31] $end
$var wire 1 G readRegister1In [30] $end
$var wire 1 H readRegister1In [29] $end
$var wire 1 I readRegister1In [28] $end
$var wire 1 J readRegister1In [27] $end
$var wire 1 K readRegister1In [26] $end
$var wire 1 L readRegister1In [25] $end
$var wire 1 M readRegister1In [24] $end
$var wire 1 N readRegister1In [23] $end
$var wire 1 O readRegister1In [22] $end
$var wire 1 P readRegister1In [21] $end
$var wire 1 Q readRegister1In [20] $end
$var wire 1 R readRegister1In [19] $end
$var wire 1 S readRegister1In [18] $end
$var wire 1 T readRegister1In [17] $end
$var wire 1 U readRegister1In [16] $end
$var wire 1 V readRegister1In [15] $end
$var wire 1 W readRegister1In [14] $end
$var wire 1 X readRegister1In [13] $end
$var wire 1 Y readRegister1In [12] $end
$var wire 1 Z readRegister1In [11] $end
$var wire 1 [ readRegister1In [10] $end
$var wire 1 \ readRegister1In [9] $end
$var wire 1 ] readRegister1In [8] $end
$var wire 1 ^ readRegister1In [7] $end
$var wire 1 _ readRegister1In [6] $end
$var wire 1 ` readRegister1In [5] $end
$var wire 1 a readRegister1In [4] $end
$var wire 1 b readRegister1In [3] $end
$var wire 1 c readRegister1In [2] $end
$var wire 1 d readRegister1In [1] $end
$var wire 1 e readRegister1In [0] $end
$var wire 1 f immediateExtendedIn [31] $end
$var wire 1 g immediateExtendedIn [30] $end
$var wire 1 h immediateExtendedIn [29] $end
$var wire 1 i immediateExtendedIn [28] $end
$var wire 1 j immediateExtendedIn [27] $end
$var wire 1 k immediateExtendedIn [26] $end
$var wire 1 l immediateExtendedIn [25] $end
$var wire 1 m immediateExtendedIn [24] $end
$var wire 1 n immediateExtendedIn [23] $end
$var wire 1 o immediateExtendedIn [22] $end
$var wire 1 p immediateExtendedIn [21] $end
$var wire 1 q immediateExtendedIn [20] $end
$var wire 1 r immediateExtendedIn [19] $end
$var wire 1 s immediateExtendedIn [18] $end
$var wire 1 t immediateExtendedIn [17] $end
$var wire 1 u immediateExtendedIn [16] $end
$var wire 1 v immediateExtendedIn [15] $end
$var wire 1 w immediateExtendedIn [14] $end
$var wire 1 x immediateExtendedIn [13] $end
$var wire 1 y immediateExtendedIn [12] $end
$var wire 1 z immediateExtendedIn [11] $end
$var wire 1 { immediateExtendedIn [10] $end
$var wire 1 | immediateExtendedIn [9] $end
$var wire 1 } immediateExtendedIn [8] $end
$var wire 1 ~ immediateExtendedIn [7] $end
$var wire 1 !! immediateExtendedIn [6] $end
$var wire 1 "! immediateExtendedIn [5] $end
$var wire 1 #! immediateExtendedIn [4] $end
$var wire 1 $! immediateExtendedIn [3] $end
$var wire 1 %! immediateExtendedIn [2] $end
$var wire 1 &! immediateExtendedIn [1] $end
$var wire 1 '! immediateExtendedIn [0] $end
$var wire 1 (! pcMore4In [31] $end
$var wire 1 )! pcMore4In [30] $end
$var wire 1 *! pcMore4In [29] $end
$var wire 1 +! pcMore4In [28] $end
$var wire 1 ,! pcMore4In [27] $end
$var wire 1 -! pcMore4In [26] $end
$var wire 1 .! pcMore4In [25] $end
$var wire 1 /! pcMore4In [24] $end
$var wire 1 0! pcMore4In [23] $end
$var wire 1 1! pcMore4In [22] $end
$var wire 1 2! pcMore4In [21] $end
$var wire 1 3! pcMore4In [20] $end
$var wire 1 4! pcMore4In [19] $end
$var wire 1 5! pcMore4In [18] $end
$var wire 1 6! pcMore4In [17] $end
$var wire 1 7! pcMore4In [16] $end
$var wire 1 8! pcMore4In [15] $end
$var wire 1 9! pcMore4In [14] $end
$var wire 1 :! pcMore4In [13] $end
$var wire 1 ;! pcMore4In [12] $end
$var wire 1 <! pcMore4In [11] $end
$var wire 1 =! pcMore4In [10] $end
$var wire 1 >! pcMore4In [9] $end
$var wire 1 ?! pcMore4In [8] $end
$var wire 1 @! pcMore4In [7] $end
$var wire 1 A! pcMore4In [6] $end
$var wire 1 B! pcMore4In [5] $end
$var wire 1 C! pcMore4In [4] $end
$var wire 1 D! pcMore4In [3] $end
$var wire 1 E! pcMore4In [2] $end
$var wire 1 F! pcMore4In [1] $end
$var wire 1 G! pcMore4In [0] $end
$var wire 1 0" addressRegisterRtIn [20] $end
$var wire 1 1" addressRegisterRtIn [19] $end
$var wire 1 2" addressRegisterRtIn [18] $end
$var wire 1 3" addressRegisterRtIn [17] $end
$var wire 1 4" addressRegisterRtIn [16] $end
$var wire 1 5" addressRegisterRdIn [15] $end
$var wire 1 6" addressRegisterRdIn [14] $end
$var wire 1 7" addressRegisterRdIn [13] $end
$var wire 1 8" addressRegisterRdIn [12] $end
$var wire 1 9" addressRegisterRdIn [11] $end
$var wire 1 :" regDstIn $end
$var wire 1 ;" jumpIn $end
$var wire 1 <" branchIn [1] $end
$var wire 1 =" branchIn [0] $end
$var wire 1 >" memReadIn $end
$var wire 1 ?" memToRegIn $end
$var wire 1 @" aluOpIn [3] $end
$var wire 1 A" aluOpIn [2] $end
$var wire 1 B" aluOpIn [1] $end
$var wire 1 C" aluOpIn [0] $end
$var wire 1 D" memWriteIn $end
$var wire 1 E" aluSrcIn $end
$var wire 1 F" regWriteIn $end
$var reg 32 G" readRegister0Out [31:0] $end
$var reg 32 H" readRegister1Out [31:0] $end
$var reg 32 I" immediateExtendedOut [31:0] $end
$var reg 32 J" pcMore4Out [31:0] $end
$var reg 5 K" addressRegisterRtOut [20:16] $end
$var reg 5 L" addressRegisterRdOut [15:11] $end
$var reg 1 M" regDstOut $end
$var reg 1 N" jumpOut $end
$var reg 2 O" branchOut [1:0] $end
$var reg 1 P" memReadOut $end
$var reg 1 Q" memToRegOut $end
$var reg 4 R" aluOpOut [3:0] $end
$var reg 1 S" memWriteOut $end
$var reg 1 T" aluSrcOut $end
$var reg 1 U" regWriteOut $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1!
1"
bx #
bx $
bx ,"
bx -"
bx G"
bx H"
bz I"
bz J"
bz K"
bz L"
zM"
zN"
bz O"
zP"
zQ"
bz R"
zS"
zT"
zU"
z%
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
z'!
z&!
z%!
z$!
z#!
z"!
z!!
z~
z}
z|
z{
zz
zy
zx
zw
zv
zu
zt
zs
zr
zq
zp
zo
zn
zm
zl
zk
zj
zi
zh
zg
zf
zG!
zF!
zE!
zD!
zC!
zB!
zA!
z@!
z?!
z>!
z=!
z<!
z;!
z:!
z9!
z8!
z7!
z6!
z5!
z4!
z3!
z2!
z1!
z0!
z/!
z.!
z-!
z,!
z+!
z*!
z)!
z(!
1H!
1I!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
1."
1/"
z4"
z3"
z2"
z1"
z0"
z9"
z8"
z7"
z6"
z5"
z:"
z;"
z="
z<"
z>"
z?"
zC"
zB"
zA"
z@"
zD"
zE"
zF"
$end
#1
0!
0"
0/"
0I!
0."
0H!
#2
1!
1."
1H!
#3
0!
0."
0H!
#4
b1 #
b1 $
1+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
1i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
1!
1."
1H!
b1 ,"
b1 -"
1e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
1E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
#5
0!
0."
0H!
#6
b10 #
b10 $
0+"
1*"
0i!
1h!
1!
1."
1H!
b10 ,"
b10 -"
b1 G"
b1 H"
0e
1d
0E
1D
#7
0!
0."
0H!
#8
b11 #
b11 $
1+"
1i!
1!
1."
1H!
b11 ,"
b11 -"
b10 G"
b10 H"
1e
1E
#9
0!
0."
0H!
#10
b100 #
b100 $
0+"
0*"
1)"
0i!
0h!
1g!
1!
1."
1H!
b100 ,"
b100 -"
b11 G"
b11 H"
0e
0d
1c
0E
0D
1C
#11
0!
0."
0H!
#12
b101 #
b101 $
1+"
1i!
1!
1."
1H!
b101 ,"
b101 -"
b100 G"
b100 H"
1e
1E
#13
0!
0."
0H!
#14
1!
1."
1H!
b101 G"
b101 H"
#15
0!
0."
0H!
#16
1!
1."
1H!
#17
0!
0."
0H!
#18
1!
1."
1H!
#19
0!
0."
0H!
#20
1!
1."
1H!
#21
0!
0."
0H!
#22
1!
1."
1H!
#23
0!
0."
0H!
#24
1!
1."
1H!
#25
0!
0."
0H!
#26
1!
1."
1H!
#27
0!
0."
0H!
#28
1!
1."
1H!
#29
0!
0."
0H!
#30
1!
1."
1H!
#31
0!
0."
0H!
#32
1!
1."
1H!
#33
0!
0."
0H!
#34
1!
1."
1H!
#35
0!
0."
0H!
#36
1!
1."
1H!
#37
0!
0."
0H!
#38
1!
1."
1H!
#39
0!
0."
0H!
#40
1!
1."
1H!
#41
0!
0."
0H!
#42
1!
1."
1H!
#43
0!
0."
0H!
#44
1!
1."
1H!
#45
0!
0."
0H!
#46
1!
1."
1H!
#47
0!
0."
0H!
#48
1!
1."
1H!
#49
0!
0."
0H!
#50
1!
1."
1H!
#51
0!
0."
0H!
#52
1!
1."
1H!
#53
0!
0."
0H!
#54
1!
1."
1H!
#55
0!
0."
0H!
#56
1!
1."
1H!
#57
0!
0."
0H!
#58
1!
1."
1H!
#59
0!
0."
0H!
#60
1!
1."
1H!
#61
0!
0."
0H!
#62
1!
1."
1H!
#63
0!
0."
0H!
#64
1!
1."
1H!
#65
0!
0."
0H!
#66
1!
1."
1H!
#67
0!
0."
0H!
#68
1!
1."
1H!
#69
0!
0."
0H!
#70
1!
1."
1H!
#71
0!
0."
0H!
#72
1!
1."
1H!
#73
0!
0."
0H!
#74
1!
1."
1H!
#75
0!
0."
0H!
#76
1!
1."
1H!
#77
0!
0."
0H!
#78
1!
1."
1H!
#79
0!
0."
0H!
#80
1!
1."
1H!
#81
0!
0."
0H!
#82
1!
1."
1H!
#83
0!
0."
0H!
#84
1!
1."
1H!
#85
0!
0."
0H!
#86
1!
1."
1H!
#87
0!
0."
0H!
#88
1!
1."
1H!
#89
0!
0."
0H!
#90
1!
1."
1H!
#91
0!
0."
0H!
#92
1!
1."
1H!
#93
0!
0."
0H!
#94
1!
1."
1H!
#95
0!
0."
0H!
#96
1!
1."
1H!
#97
0!
0."
0H!
#98
1!
1."
1H!
#99
0!
0."
0H!
#100
1!
1."
1H!
